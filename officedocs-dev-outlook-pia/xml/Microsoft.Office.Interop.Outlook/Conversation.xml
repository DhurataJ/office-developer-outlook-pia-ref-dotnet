<Type Name="Conversation" FullName="Microsoft.Office.Interop.Outlook.Conversation">
  <TypeSignature Language="C#" Value="public interface Conversation : Microsoft.Office.Interop.Outlook._Conversation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Conversation implements class Microsoft.Office.Interop.Outlook._Conversation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.Conversation" />
  <TypeSignature Language="VB.NET" Value="Public Interface Conversation&#xA;Implements _Conversation" />
  <TypeSignature Language="C++ CLI" Value="public interface class Conversation : Microsoft::Office::Interop::Outlook::_Conversation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook._Conversation</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Outlook.ConversationClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063101-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a conversation that includes one or more items stored in one or more folders and stores.</summary>
    <remarks>
      <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook._Conversation" />.</para>
      <para>The <b>Conversation</b> object is an abstract, aggregated object. Although a conversation can include items of different types, the <b>Conversation</b> object does not correspond to a particular underlying MAPI IMessage : IMAPIProp object.</para>
      <para>A conversation represents one or more items in one or more folders and stores. If you move an item in a conversation to the Deleted Items folder and subsequently enumerate the conversation by using the <see cref="M:Microsoft.Office.Interop.Outlook._Conversation.GetChildren(System.Object)" />, <see cref="M:Microsoft.Office.Interop.Outlook._Conversation.GetRootItems" />, or <see cref="M:Microsoft.Office.Interop.Outlook._Conversation.GetTable" /> method, the item will not be included in the returned object.</para>
      <para>To obtain a <b>Conversation</b> object for an existing conversation, use the <b>GetConversation</b> method of the item.</para>
      <para>There are actions that you can apply to items in a conversation by calling the <see cref="M:Microsoft.Office.Interop.Outlook._Conversation.SetAlwaysAssignCategories(System.String,Microsoft.Office.Interop.Outlook.Store)" />, <see cref="M:Microsoft.Office.Interop.Outlook._Conversation.SetAlwaysDelete(Microsoft.Office.Interop.Outlook.OlAlwaysDeleteConversation,Microsoft.Office.Interop.Outlook.Store)" />, or <see cref="M:Microsoft.Office.Interop.Outlook._Conversation.SetAlwaysMoveToFolder(Microsoft.Office.Interop.Outlook.MAPIFolder,Microsoft.Office.Interop.Outlook.Store)" /> method. Each of these actions is applied to all items in the conversation automatically when the method is called; the action is also applied to future items in the conversation as long as the action is still applicable to the conversation. There is no explicit save method on the <b>Conversation</b> object.</para>
      <para>Also, when you apply an action to items in a conversation, the corresponding event occurs. For example, the <see cref="E:Microsoft.Office.Interop.Outlook.ItemsEvents_Event.ItemChange" /> event of the <see cref="T:Microsoft.Office.Interop.Outlook.Items" /> object occurs when you call <b>SetAlwaysAssignCategories</b>, and the <see cref="E:Microsoft.Office.Interop.Outlook.MAPIFolderEvents_12_Event.BeforeItemMove" /> event of the <see cref="T:Microsoft.Office.Interop.Outlook.Folder" /> object occurs when you call <b>SetAlwaysMoveToFolder</b>.</para>
      <para />
    </remarks>
  </Docs>
  <Members />
</Type>