<Type Name="InspectorsEvents_NewInspectorEventHandler" FullName="Microsoft.Office.Interop.Outlook.InspectorsEvents_NewInspectorEventHandler">
  <TypeSignature Language="C#" Value="public delegate void InspectorsEvents_NewInspectorEventHandler(Inspector Inspector);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InspectorsEvents_NewInspectorEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.InspectorsEvents_NewInspectorEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub InspectorsEvents_NewInspectorEventHandler(Inspector As Inspector)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void InspectorsEvents_NewInspectorEventHandler(Inspector ^ Inspector);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(16)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="Inspector" Type="Microsoft.Office.Interop.Outlook.Inspector" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="Inspector">The inspector that was opened.</param>
    <summary>This is a delegate for an event in the corresponding object. After implementing a callback method for the event, use this delegate to connect the callback method to the event. If there are multiple versions of the event interface, this delegate connects the callback method for the event in the specified version of Outlook.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>