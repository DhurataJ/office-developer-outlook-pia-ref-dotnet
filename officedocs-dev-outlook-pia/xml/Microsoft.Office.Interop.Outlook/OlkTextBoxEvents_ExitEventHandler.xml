<Type Name="OlkTextBoxEvents_ExitEventHandler" FullName="Microsoft.Office.Interop.Outlook.OlkTextBoxEvents_ExitEventHandler">
  <TypeSignature Language="C#" Value="public delegate void OlkTextBoxEvents_ExitEventHandler(ref bool Cancel);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OlkTextBoxEvents_ExitEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.OlkTextBoxEvents_ExitEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub OlkTextBoxEvents_ExitEventHandler(ByRef Cancel As Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void OlkTextBoxEvents_ExitEventHandler(bool % Cancel);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(16)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="ref" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="Cancel">
      <b>False</b> when the event occurs. If the event procedure sets this argument to <b>True</b>, the exit operation is not completed and the focus remains in this control.</param>
    <summary>This is a delegate for an event in the corresponding object. After implementing a callback method for the event, use this delegate to connect the callback method to the event. If there are multiple versions of the event interface, this delegate connects the callback method for the event in the specified version of Outlook.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>