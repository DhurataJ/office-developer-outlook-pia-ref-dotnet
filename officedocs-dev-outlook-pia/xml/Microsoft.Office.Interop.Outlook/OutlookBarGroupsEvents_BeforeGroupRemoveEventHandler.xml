<Type Name="OutlookBarGroupsEvents_BeforeGroupRemoveEventHandler" FullName="Microsoft.Office.Interop.Outlook.OutlookBarGroupsEvents_BeforeGroupRemoveEventHandler">
  <TypeSignature Language="C#" Value="public delegate void OutlookBarGroupsEvents_BeforeGroupRemoveEventHandler(OutlookBarGroup Group, out bool Cancel);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OutlookBarGroupsEvents_BeforeGroupRemoveEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.OutlookBarGroupsEvents_BeforeGroupRemoveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub OutlookBarGroupsEvents_BeforeGroupRemoveEventHandler(Group As OutlookBarGroup, ByRef Cancel As Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void OutlookBarGroupsEvents_BeforeGroupRemoveEventHandler(OutlookBarGroup ^ Group, [Runtime::InteropServices::Out] bool % Cancel);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(16)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="Group" Type="Microsoft.Office.Interop.Outlook.OutlookBarGroup" />
    <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="Group">The <b>OutlookBarGroup</b>  that is being removed.</param>
    <param name="Cancel">
      <b>False</b> when the event occurs. If the event procedure sets this argument to <b>True</b>, the group is not removed from the Shortcuts pane.</param>
    <summary>This is a delegate for an event in the corresponding object. After implementing a callback method for the event, use this delegate to connect the callback method to the event. If there are multiple versions of the event interface, this delegate connects the callback method for the event in the specified version of Outlook.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>