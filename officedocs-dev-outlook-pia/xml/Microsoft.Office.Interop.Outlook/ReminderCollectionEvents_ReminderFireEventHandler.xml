<Type Name="ReminderCollectionEvents_ReminderFireEventHandler" FullName="Microsoft.Office.Interop.Outlook.ReminderCollectionEvents_ReminderFireEventHandler">
  <TypeSignature Language="C#" Value="public delegate void ReminderCollectionEvents_ReminderFireEventHandler(Reminder ReminderObject);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ReminderCollectionEvents_ReminderFireEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.ReminderCollectionEvents_ReminderFireEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ReminderCollectionEvents_ReminderFireEventHandler(ReminderObject As Reminder)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ReminderCollectionEvents_ReminderFireEventHandler(Reminder ^ ReminderObject);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(16)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="ReminderObject" Type="Microsoft.Office.Interop.Outlook.Reminder" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="ReminderObject">The <b>Reminder</b> object that has been executed.</param>
    <summary>This is a delegate for an event in the corresponding object. After implementing a callback method for the event, use this delegate to connect the callback method to the event. If there are multiple versions of the event interface, this delegate connects the callback method for the event in the specified version of Outlook.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>