<Type Name="StorageItem" FullName="Microsoft.Office.Interop.Outlook.StorageItem">
  <TypeSignature Language="C#" Value="public interface StorageItem : Microsoft.Office.Interop.Outlook._StorageItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract StorageItem implements class Microsoft.Office.Interop.Outlook._StorageItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.StorageItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface StorageItem&#xA;Implements _StorageItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class StorageItem : Microsoft::Office::Interop::Outlook::_StorageItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook._StorageItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Outlook.StorageItemClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000630CB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A message object in MAPI that is always saved as a hidden item in the parent folder and stores private data for Outlook solutions.</summary>
    <remarks>
      <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook._StorageItem" />. </para>
      <para>A <b>StorageItem</b> object is stored at the folder level, allowing it to roam with the account and be available online or offline.</para>
      <para>The Outlook object model does not provide any collection object for <b>StorageItem</b> objects. However, you can use <see cref="M:Microsoft.Office.Interop.Outlook.MAPIFolder.GetTable(System.Object,System.Object)" /> to obtain a <see cref="T:Microsoft.Office.Interop.Outlook.Table" /> with all the hidden items in a <see cref="T:Microsoft.Office.Interop.Outlook.Folder" />, when you specify  the <paramref name="TableContents" /> parameter as <b>olHiddenItems</b>. If keeping your data private is of a high concern, you should encrypt the data before storing it.</para>
      <para>Once you have obtained a <b>StorageItem</b> object, you can do the following to store solution data:</para>
      <list type="bullet">
        <item>
          <para>Add attachments to the item for storage.</para>
        </item>
        <item>
          <para>Use explicit built-in properties of the item such as <see cref="P:Microsoft.Office.Interop.Outlook._StorageItem.Body" /> to store custom data.</para>
        </item>
        <item>
          <para>Add custom properties to the item using <see cref="M:Microsoft.Office.Interop.Outlook.UserProperties.Add(System.String,Microsoft.Office.Interop.Outlook.OlUserPropertyType,System.Object,System.Object)" /> method. Note that in this case, the optional <paramref name="AddToFolderFields" /> and <paramref name="DisplayFormat" /> arguments of the <b>UserProperties.Add</b> method will be ignored.</para>
        </item>
        <item>
          <para>Use the <see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" /> object to get or set custom properties.</para>
        </item>
      </list>
      <para>The default message class for a new <b>StorageItem</b> is <b>IPM.Storage</b>. If the <b>StorageItem</b> existed as a hidden message in a version of Outlook prior to Microsoft Office Outlook 2007, the message class will remain unchanged. In order to prevent modification of the message class, <b>StorageItem</b> does not expose an explicit <b>MessageClass</b> property.</para>
      <para>For more information on storing solution data using the <b>StorageItem</b> object, see <a href="http://go.microsoft.com/fwlink/?LinkId=87931">Storing Data for Solutions</a></para>
      <para />
    </remarks>
  </Docs>
  <Members />
</Type>