<Type Name="StoresEvents_12_Event" FullName="Microsoft.Office.Interop.Outlook.StoresEvents_12_Event">
  <TypeSignature Language="C#" Value="public interface StoresEvents_12_Event" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract StoresEvents_12_Event" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.StoresEvents_12_Event" />
  <TypeSignature Language="VB.NET" Value="Public Interface StoresEvents_12_Event" />
  <TypeSignature Language="C++ CLI" Value="public interface class StoresEvents_12_Event" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComEventInterface(typeof(Microsoft.Office.Interop.Outlook.StoresEvents_12), typeof(Microsoft.Office.Interop.Outlook.StoresEvents_12_EventProvider))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(16)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This is a .NET interface created when processing a COM coclass that is required by managed code for interoperability with the corresponding COM object. This interface implements all events of earlier interfaces and any additional new events. Use this interface only when the event you want to use shares the same name as a method of the COM object; in this case, cast to this interface to connect to the event, and cast to the primary interface to call the method. Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeforeStoreRemove">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Interop.Outlook.StoresEvents_12_BeforeStoreRemoveEventHandler BeforeStoreRemove;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Outlook.StoresEvents_12_BeforeStoreRemoveEventHandler BeforeStoreRemove" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Interop.Outlook.StoresEvents_12_Event.BeforeStoreRemove" />
      <MemberSignature Language="VB.NET" Value="Event BeforeStoreRemove As StoresEvents_12_BeforeStoreRemoveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Office::Interop::Outlook::StoresEvents_12_BeforeStoreRemoveEventHandler ^ BeforeStoreRemove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.StoresEvents_12_BeforeStoreRemoveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a <see cref="T:Microsoft.Office.Interop.Outlook.Store" /> is about to be removed from the current session either programmatically or through user action. </summary>
        <remarks>
          <para>Outlook must be running in order for this event to fire. This event will fire when any of the following occurs:  </para>
          <list type="bullet">
            <item>
              <para>A store is removed by the user clicking the Close command on the Shortcut menu.</para>
            </item>
            <item>
              <para>A store is removed programmatically by calling <see cref="M:Microsoft.Office.Interop.Outlook._NameSpace.RemoveStore(Microsoft.Office.Interop.Outlook.MAPIFolder)" />.</para>
            </item>
          </list>
          <para>This event will not fire when any of the following occurs: </para>
          <list type="bullet">
            <item>
              <para>When Outlook shuts down and closes a primary or delegate store.</para>
            </item>
            <item>
              <para>If a store is removed through the Mail applet in the Microsoft Windows Control Panel and Outlook is not running.</para>
            </item>
            <item>
              <para>A delegate store is removed on the Advanced tab of the Microsoft Exchange Server dialog box.</para>
            </item>
            <item>
              <para>A store is removed through the Data Files tab of the Account Manager dialog box when Outlook is not running.</para>
            </item>
            <item>
              <para>An IMAP Store is removed from the profile.</para>
            </item>
          </list>
          <para>You can use this event to determine that a store has been removed, and take appropriate actions if the store is required for your application (such as remounting the store). Otherwise you would have to resort to polling the <see cref="T:Microsoft.Office.Interop.Outlook.Stores" /> collection.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAdd">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Interop.Outlook.StoresEvents_12_StoreAddEventHandler StoreAdd;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Outlook.StoresEvents_12_StoreAddEventHandler StoreAdd" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Interop.Outlook.StoresEvents_12_Event.StoreAdd" />
      <MemberSignature Language="VB.NET" Value="Event StoreAdd As StoresEvents_12_StoreAddEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Office::Interop::Outlook::StoresEvents_12_StoreAddEventHandler ^ StoreAdd;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.StoresEvents_12_StoreAddEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a <see cref="T:Microsoft.Office.Interop.Outlook.Store" /> has been added to the current session either programmatically or through user action.</summary>
        <remarks>
          <para>Outlook must be running in order for this event to fire. This event will fire when any of the following occur:  </para>
          <list type="bullet">
            <item>
              <para>A store is added through the Open Outlook Data File dialog box, by selecting Open and then Outlook Data File on the File menu.</para>
            </item>
            <item>
              <para>A store is added through the Data Files tab of the Account Manager dialog box.</para>
            </item>
            <item>
              <para>A store is added successfully by calling the <see cref="M:Microsoft.Office.Interop.Outlook._NameSpace.AddStore(System.Object)" /> method.</para>
            </item>
          </list>
          <para>This event will not fire when any of the following occurs: </para>
          <list type="bullet">
            <item>
              <para>When Outlook starts and opens a primary or delegate store. </para>
            </item>
            <item>
              <para>If a store is added through the Mail applet in the Microsoft Windows Control Panel and Outlook is not running. </para>
            </item>
            <item>
              <para>A delegate store is added through the Advanced tab of the Microsoft Exchange Server dialog box. </para>
            </item>
          </list>
          <para>You can use this event to determine whether a store has been added and take appropriate actions on items in that store. Otherwise, you would have to resort to polling the <see cref="T:Microsoft.Office.Interop.Outlook.Stores" /> collection.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>