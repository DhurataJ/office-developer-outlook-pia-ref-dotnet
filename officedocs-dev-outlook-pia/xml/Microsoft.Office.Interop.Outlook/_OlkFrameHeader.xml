<Type Name="_OlkFrameHeader" FullName="Microsoft.Office.Interop.Outlook._OlkFrameHeader">
  <TypeSignature Language="C#" Value="public interface _OlkFrameHeader" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _OlkFrameHeader" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._OlkFrameHeader" />
  <TypeSignature Language="VB.NET" Value="Public Interface _OlkFrameHeader" />
  <TypeSignature Language="C++ CLI" Value="public interface class _OlkFrameHeader" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00067352-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event. Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object. For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.OlkFrameHeader" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkFrameHeader.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As OlAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlAlignment Alignment { Microsoft::Office::Interop::Outlook::OlAlignment get(); void set(Microsoft::Office::Interop::Outlook::OlAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(710)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(710)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(710)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlAlignment" /> constant that indicates the position of a control relative to its caption.    Read/write.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The default value is <b>olAlignmentLeft</b>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkFrameHeader.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-518)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets a <b>String</b> (<b>string</b> in C#) that appears on an object to identify or describe it.  Read/write.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The default value is an empty string. The Forms Designer sets this property to the control's default name.  </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkFrameHeader.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that indicates if the control is allowed to function.  Read/write.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The default value is <b>False</b>.</para>
          <para>When the control is disabled, the contents of the control appear dimmed.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public stdole.StdFont Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class stdole.StdFont Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkFrameHeader.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As StdFont" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property stdole::StdFont ^ Font { stdole::StdFont ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.StdFont</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an <b>StdFont</b> that represents the font used to render the text inside the control.  Read-only.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public uint ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 ForeColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkFrameHeader.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 ForeColor { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComAliasName("stdole.OLE_COLOR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets a <b>UInteger</b> (<b>uint</b> in C#) value that indicates the foreground color of the control. Read/write.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This property is of the type <b>OLE_COLOR</b> which is a <b>UInteger</b> (<b>uint</b> in C#) value. The default value for this property is 0x80000008, "Window Text."  </para>
          <para>The frame header control has only the foreground color and not the background color.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseIcon">
      <MemberSignature Language="C#" Value="public stdole.StdPicture MouseIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class stdole.StdPicture MouseIcon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkFrameHeader.MouseIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property MouseIcon As StdPicture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property stdole::StdPicture ^ MouseIcon { stdole::StdPicture ^ get(); void set(stdole::StdPicture ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.StdPicture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets a <b>StdPicture</b> that represents the custom picture to the mouse cursor for this control. Read/write.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The default value is <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#).</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MousePointer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlMousePointer MousePointer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlMousePointer MousePointer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkFrameHeader.MousePointer" />
      <MemberSignature Language="VB.NET" Value="Public Property MousePointer As OlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlMousePointer MousePointer { Microsoft::Office::Interop::Outlook::OlMousePointer get(); void set(Microsoft::Office::Interop::Outlook::OlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlMousePointer" /> constant that specifies the type of pointer displayed when the user positions the mouse over the control.  Read/write.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The default value is <b>olMousePointerDefault</b>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
